---
import { Image } from 'astro:assets';
import Wrapper from '../../shared/Wrapper.astro';
import './orderLocation.scss'
import Paragraph from '../../shared/Paragraph.astro';
import Headline from '../../shared/Headline.astro';
---

<div id="order-trigger" class="order">
   <Wrapper classes="order-wrap">
    <div class="order-left">
        <a title="Clicking this button will call our restaurant." href={`tel:+1${Astro.props.data.leftButtonPhoneNumber}`}>{Astro.props.data.leftButtonText}</a>
        <Paragraph>{Astro.props.data.leftButtonContent}</Paragraph>
    </div>
    <div class="order-logo">
        <Image src={Astro.props.data.mainLogo.sourceUrl} alt="Scoundrels Pizza & Shareables" width={500} inferSize={true} />
    </div>
    <div class="order-right">
        <a
            title="Clicking this button will open our menu in a new window"
            target="_balnk"
            rel="noopener noreferrer"
            href={`${Astro.props.data.rightButtonMenuPdf.mediaItemUrl}`}
        >
            {Astro.props.data.rightButtonText}
        </a>
        <Paragraph>{Astro.props.data.rightButtonContent}</Paragraph>
    </div>
    <div class="order-location">
        <Headline ele="h3" hlstyle="two">{Astro.props.data.bottomContentTitle}</Headline>
        <Paragraph ele="p" pstyle="one">{Astro.props.data.bottomContentAddress}</Paragraph>
    </div>
   </Wrapper>
   <div class="order-cropped">
    <Image src={Astro.props.data.closeCroppedImage.sourceUrl} alt={Astro.props.data.closeCroppedImage.altText} inferSize={true} width={250} />
   </div>
</div>


<script>
    import gsap from "gsap"
    import { ScrollTrigger } from "gsap/ScrollTrigger"
    gsap.registerPlugin(ScrollTrigger)

    const order = document.querySelector('#order-trigger');
    const cropped = document.querySelector('.order-cropped');
    if(order && cropped) {
        gsap
        .timeline({
            scrollTrigger: {
                trigger: order,
                markers: false,
                start: "top 150%",
                end: "top -50%",
                scrub: true,
            },
        })
        .fromTo(
            cropped,
            {
                y: 100,
                duration: 1,
                ease: "none"
            },
            {
                y: -100,
                ease: "none"
            }
        )
    }
</script>